return {}
-- return {
-- 	"hrsh7th/nvim-cmp",
-- 	version = false, -- last release is way too old
-- 	event = "InsertEnter",
-- 	dependencies = {
-- 		"hrsh7th/cmp-nvim-lsp",
-- 		"hrsh7th/cmp-buffer",
-- 		"hrsh7th/cmp-path",
-- 		"saadparwaiz1/cmp_luasnip",
-- 		{
-- 			"L3MON4D3/LuaSnip",
-- 			build = "make install_jsregexp"
-- 		}
-- 	},
-- 	opts = function()
-- 		vim.api.nvim_set_hl(0, "CmpGhostText", { link = "Comment", default = true })
--
-- 		local cmp = require("cmp")
-- 		local defaults = require("cmp.config.default")()
--
-- 		return {
-- 			completion = {
-- 				completeopt = "menu,menuone,noinsert",
-- 			},
--
-- 			snippet = {
-- 				expand = function(args)
-- 					require("luasnip").lsp_expand(args.body)
-- 				end,
-- 			},
--
-- 			mapping = cmp.mapping.preset.insert({
-- 				["<C-j>"] = cmp.mapping.select_next_item({ behavior = cmp.SelectBehavior.Insert }),
-- 				["<C-k>"] = cmp.mapping.select_prev_item({ behavior = cmp.SelectBehavior.Insert }),
-- 				["<C-Space>"] = cmp.mapping.complete(),
-- 				["<C-e>"] = cmp.mapping.abort(),
-- 				["<CR>"] = cmp.mapping.confirm({
-- 					behavior = cmp.ConfirmBehavior.Replace,
-- 					select = true
-- 				}),
-- 				["<C-CR>"] = function(fallback)
-- 					cmp.abort()
-- 					fallback()
-- 				end,
-- 			}),
--
-- 			sources = cmp.config.sources({
-- 				{ name = 'copilot' },
-- 				{ name = "nvim_lsp" },
-- 				{ name = "luasnip" },
-- 				{ name = "path" },
-- 			}, {
-- 				{ name = "buffer" },
-- 			}),
--
-- 			experimental = {
-- 				ghost_text = {
-- 					hl_group = "CmpGhostText",
-- 				},
-- 			},
--
-- 			sorting = defaults.sorting,
-- 		}
-- 	end
-- }
